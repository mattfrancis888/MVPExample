public class MovieAPIPresenter{
    MovieAPIServiceModel movieApiServiceModel;
    MovieAPIPresenterListener listner;

    public interface MovieAPIPresenterListener{
        void moviesDataRetrieved(List movies);
    }

    public MovieAPIPresenter(MovieAPIServiceModel movieApiServiceModel, MovieAPIPresenterListener listener){
        this.movieApiServiceModel = movieApiServiceModel;
        this.listner = listener;
    }

    public void getMovies(String apiKey, String language, String sortBy, String page){

        movieApiServiceModel.getAPI().getMovies(apiKey, language, sortBy, page).enqueue(new Callback<POJOMovie>() {
            @Override
            public void onResponse(Call<POJOMovie> call, Response<POJOMovie> response) {
                List result = new ArrayList();
                int size = 2 ;
                for(int i = 0; i < size;i++){
                    result.add(response.body().getResults().get(i).getTitle());
                }

                listner.moviesDataRetrieved(result);

            }

            @Override
            public void onFailure(Call<POJOMovie> call, Throwable t) {
                Log.d("blue", "fail ya");
            }
        });
    }
}
